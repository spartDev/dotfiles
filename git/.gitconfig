# Local/private config goes in the include
[include]
        path = ~/.gitconfig.local
[hub]
        protocol = https
[alias]
        # View the current working tree status using the short format
        st = status

        # Switch to a branch, creating it if necessary
        go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

        cm = commit -m

        lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ar)%Creset'

        ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

        ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

        # List contributors with number of commits
        contributors = shortlog --summary --numbered

        # Remove branches that have already been merged with master
        # a.k.a. ‘delete merged’
        dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

        # Amend the currently staged files to the latest commit
        amend = commit --amend --reuse-message=HEAD

        # Credit an author on the latest commit
        credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

        # reset
        unstage = reset HEAD              # remove files from index (tracking)
        uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
        filelog = log -u                  # show changes to a file
[core]
        excludesfile = ~/.gitignore_global
        editor = code -w -n
        # Treat spaces before tabs and all kinds of trailing whitespace as an error
        # [default] trailing-space: looks for spaces at the end of a line
        # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
        whitespace = space-before-tab,-indent-with-non-tab,trailing-space

        # Make `git rebase` safer on OS X
        # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
        trustctime = false
        autocrlf = false

        # Speed up commands involving untracked files such as `git status`.
        # https://git-scm.com/docs/git-update-index#_untracked_cache
        untrackedCache = true
[diff]
        mnemonicPrefix = true
        wordRegex = .
[fetch]
        recurseSubmodules = on-demand
[grep]
        extendedRegexp = true
[log]
        abbrevCommit = true
[merge]
        conflictStyle = diff3
        # Include summaries of merged commits in newly created merge commit messages
        log = true
        tool = p4merge
[mergetool]
        keepBackup = false
        keepTemporaries = false
        prompt = false
[pull]
        # This is GREATâ€¦ when you know what you're doing and are careful
        # not to pull --no-rebase over a local line containing a true merge.
        rebase = true
        # WARNING! This option, which does away with the one gotcha of
        # auto-rebasing on pulls, is only available from 1.8.5 onwards.
        # rebase = preserve
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to suppress warning message
        default = simple
        # Make `git push` push relevant annotated tags when pushing branches out.
        followTags = true
[apply]
        # Detect whitespace errors when applying a patch
        whitespace = fix

[difftool]
        prompt = false
[status]
        # submoduleSummary = true
        showUntrackedFiles = all
[tag]
         sort = version:refname
[help]
         # Correct typos
        autocorrect = 1
[credential]
        helper = osxkeychain
[rerere]
        # If, like me, you like rerere, decomment these
        # autoupdate = true
        # enabled = true
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "diff"]
        meta = yellow bold
        frag = magenta bold # line info
        old = red # deletions
        new = green # additions

[color "status"]
        added = yellow
        changed = green
        untracked = cyan
[init]
        defaultBranch = main
